generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// пользователь
model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  name     String?
  role     String    @default("USER") // USER или ADMIN
  telegramId     String?   @unique
  bookings Booking[]
  accounts Account[]
  sessions Session[]
  linkToken LinkToken?
}

// комната
model Room {
  id          Int       @id @default(autoincrement())
  name        String
  capacity    Int
  description String?
  bookings    Booking[]
}

// бронирование
model Booking {
  id        Int      @id @default(autoincrement())
  title     String
  startTime DateTime
  endTime   DateTime

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  room   Room @relation(fields: [roomId], references: [id])
  roomId Int

  // индекс для быстрого поиска пересекающихся бронирований
  @@index([roomId, startTime, endTime])
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model LinkToken {
  id        String   @id @unique
  userId    Int      @unique
  expires   DateTime

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}